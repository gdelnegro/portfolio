# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-09-06 16:52:51
from __future__ import unicode_literals

from django.db import migrations


def __load_data(**kwargs):
    apps = kwargs.pop('apps', None)
    translation_type = apps.get_model("portfolio", "TranslationType")
    if apps:
        model = apps.get_model("portfolio", "Translation")
        try:
            mdl = model.objects.get(tag=kwargs['tag'])
        except model.DoesNotExist:
            mdl = model()
        except Exception as err:
            raise err
        for k, v in kwargs.items():
            if k == "type":
                setattr(mdl, k, translation_type.objects.get(tag=v))
            else:
                setattr(mdl, k, v)
        setattr(mdl, "migration_created", True)
        mdl.save()


def clear_data(apps, schema_editor):
    model = apps.get_model("portfolio", "Translation")
    model.objects.filter(tag__in=["ME1","ME3","ME4","ME2"]).delete()


def load_data(apps, schema_editor):
    __load_data(apps=apps, tag="ME1", type="ME", text_pt_br="Objeto de imagem inválido", text_en="Invalid image object", auxiliary_tag="", auxiliary_text_pt_br="", auxiliary_text_en="")
    __load_data(apps=apps, tag="ME3", type="ME", text_pt_br="Arquivo de imagem é maior que o limite de 2,5Mb", text_en="Image size is bigger than 2.5MB size limit", auxiliary_tag="", auxiliary_text_pt_br="", auxiliary_text_en="")
    __load_data(apps=apps, tag="ME4", type="ME", text_pt_br="Erro no decodificador da imagem", text_en="Error on base64 encode", auxiliary_tag="", auxiliary_text_pt_br="", auxiliary_text_en="")
    __load_data(apps=apps, tag="ME2", type="ME", text_pt_br="Imagem não existe", text_en="Image does not exist", auxiliary_tag="", auxiliary_text_pt_br="", auxiliary_text_en="")


class Migration(migrations.Migration):

    dependencies = [
        ('portfolio', '0002_translation_type_data_20160728_1129'),
    ]

    operations = [
        migrations.RunPython(load_data, clear_data)
    ]

        