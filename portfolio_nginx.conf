upstream portfolio_server{
	server unix:/home/gdelnegro/projects/gdelnegro/portfolio/src/portfolio.sock fail_timeout=0;
}

server {

    listen   8001;
    server_name localhost;

    client_max_body_size 4G;

    access_log /var/log/web/portfolio/nginx-access.log;
    error_log /var/log/web/portfolio/nginx-error.log;
 
    location /static/ {
        alias   /home/gdelnegro/projects/gdelnegro/portfolio/src/static/;
    }
    
    location / {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization,authorization,token,Token,Content-Type,content-type'; 
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        #add_header 'Access-Control-Max-Age' 1728000;
        #add_header 'Content-Type' 'text/plain charset=UTF-8';
        #add_header 'Content-Length' 0;
        #add_header 'Access-Control-Allow-Headers' 'Authorization,authorization,token,Token,Content-Type,content-type'; 
        #return 204;
        
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://portfolio_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /home/gdelnegro/projects/gdelnegro/portfolio/src/static/;
    }
}
